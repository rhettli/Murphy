local _M = {}

-- here defined the operator permission item use []  (使用[]来定义一个权限)
-- use p: I: (使用P: 开头表示权限类，I:开头表示权限类中的项目)

-- [P:operator|管理员]
function _M:new()
    self.model_name = 'operator'
    self.show_list = false
    return self
end

-- [I:update|更新]
function _M:update()
    local id = _http_params('id')
    assert(_is_valid(id), 'no id')

    local Member = _new_model('operator')

    local memberObj = Member:findFirstById(_http_params('id'))
    if _is_valid(memberObj) then
        self:assign(memberObj, 'member')
        print(_json_encode(memberObj))
        memberObj:Save()
    end

    return self:renderJSON()
end

-- [I:create|更新]
function _M:create()
end

-- [I:edit|更新]
function _M:edit()
    local id = _http_params('id')
    assert(_is_valid(id), 'no id')

    local _operator = self:model('operator')
    print('model new:=', _json_encode(_operator))

    local operator = _operator:findFirstById(id)

    assert(operator, 'not find member with id:' .. id)

    self:view('operator', operator):render("admin.operator.edit")
end

function _M:dashboard()

end

function _M:login()
    if _http_header('x-requested-with') == 'XMLHttpRequest' then

        local username = _http_params('username');
        local password = _http_params('password');

        local ip = _http_ip()
        Operators = __model.operator
        operator = Operators:findFirstBy('username', username)

        if not operator or _md5(password) ~= operator.password then
            --_http_session('operator_psw', '');

            --local operator = Operators:findFirst()
            --if not _is_valid(operator) then
            --    operator = Operators:new();
            --    operator.username = 'admin';
            --    operator.password = md5(password);
            --    operator.password_updated_at = _time();
            --    operator.status = 1;
            --    operator.role = 'admin';
            --    operator.ip = ip;
            --    operator.created_at = _time();
            --    operator.updated_at = _time();
            --    operator:save();
            --    _http_redirect('/admin/operator/dashboard')
            --    return
            --end

            return self:renderJSON({}, '用户不存在或密码不正确', -1);
        end

        if (operator:isBlocked()) then
            _http_cookie('operator_psw', '');
            return self:renderJSON({  }, '帐号被禁用', -1);
        end

        operator.ip = ip;
        operator.active_at = _time();
        operator:update();

        --if (class_exists('OperatorLoginHistories')) {
        --    OperatorLoginHistories :: record(operator, ip);
        --}

        _http_cookie('i', operator.id, '/', _time() + 86400);

        --this.session.set('operator_login_ip', ip);

        if (_time() - operator.password_updated_at > 3600 * 24 * 30) then
            --http_redirect('/admin/home/reset_password')
        end

        _http_cookie('m', operator.password, '/', _time() + 86400);

        _http_redirect('', '/admin/operator/dashboard', 304)
    end

end

return _extend(_M, "controller.admin.base")
